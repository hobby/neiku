#!/bin/bash
# vim:ts=4:sw=4:expandtab

############################################################
# NAME
#     mkm - a toy for manager mkx
#
# SYNOPSIS
#     mkm find target [ --global | --system ]
#     mkm list target [ --global | --system ]
#     mkm path target [ --global | --system ]
#     mkm del  target [ --global | --system ] targets...
#     mkm add  target [ --global | --system ] module-name host-path targets...
#
#     mkm list module
#     mkm del  module modules...
#     mkm add  module module-name rsa username rsapkey-path hostname hostport
#
#     debug=on mkm ...
#
# AUTHORS
#     neiku project <ku7d@qq.com> 
#
# SEE ALSO
#     mkxrc_commands
#     mkxrc_targets
#     mkxrc_modules
#
# VERSION
#     2015/11/26: 支持查看/删除/新增target
#     2015/11/27: 支持查看/删除/新增module
#     2015/11/28: 支持project/global/system级别的target配置
#
############################################################

# target(*) <-----> module(1)     <-----> destination(1)
# target(1) <-----> command(stop)
mkxrc_modules=~/.mkxrc_modules

mkxrc_targets_sys="/etc/mkxrc_targets"
mkxrc_targets_glo="$HOME/.mkxrc_targets"
mkxrc_targets_prj="`pwd -P`/.mkxrc_targets~"

function showhelp()
{
    echo "usage:"
    echo "    mkm find target [ --global | --system ]"
    echo "    mkm list target [ --global | --system ]"
    echo "    mkm path target [ --global | --system ]"
    echo "    mkm del  target [ --global | --system ] targets..."
    echo "    mkm add  target [ --global | --system ] module-name host-path targets..."
    echo ""
    echo "    mkm list module"
    echo "    mkm del  module modules..."
    echo "    mkm add  module module-name rsa username rsapkey-path hostname hostport"
}

if [ $# -lt 2 ] ; then
    showhelp && exit 1;
fi

cmd="$1"
mod="$2"

if [   "$cmd" != "add"  \
    -a "$cmd" != "list" \
    -a "$cmd" != "find" \
    -a "$cmd" != "del"  \
    -a "$cmd" != "get"  \
    -a "$cmd" != "path" ] ; then
    showhelp && exit 1;
fi
if [ "$mod" != "target" -a "$mod" != "module" ] ; then
    showhelp && exit 1;
fi

shift 2

if [ $mod = "target" ] ; then
    case "$cmd" in
    find)
        path="`mkm path target $1`"
        if [ "$1" = "--global" -o "$1" = "--system" ] ; then
            grep -v -E "^#|^$" "$path" 2>/dev/null \
            | grep -w "$2" \
            | tail -n1
            exit
        fi
        out="`grep -v -E "^#|^$" "$path" 2>/dev/null \
              | grep -w "$1" \
              | tail -n1`"
        [ -z "$out" ] && out="`mkm find target --global $1`"
        [ -z "$out" ] && out="`mkm find target --system $1`"
        echo "$out"
        exit
        ;;
    list)
        path="`mkm path target $1`"
        if [ "$1" = "--global" -o "$1" = "--system" ] ; then
            debug=on mklog debug "# ${1:2}'s targets ($path):"
            [ -s "$path" ] && cat "$path"
            exit
        fi
        debug=on mklog debug "# project's targets ($path):"
        [ -s "$path" ] && cat "$path"
        mkm list target --global
        mkm list target --system
        exit
        ;;
    del)
        path="`mkm path target $1`"
        if [ "$1" = "--global" -o "$1" = "--system" ] ; then
            flag="$1"
            shift 1
            [ -f "$path" ] \
            && for target in $* ; do
                sed -i "s/\<$target\>//g" "$path"
                mklog normal "del ${flag:2} target($target) succ"
            done \
            ||  mklog error "del ${flag:2} target($*) fail"
            exit
        fi
        [ -f "$path" ] \
        && for target in $* ; do
            sed -i "s/\<$target\>//g" "$path"
            mklog normal "del project target($target) succ"
        done \
        ||  mklog error "del project target($*) fail"
        exit
        ;;
    add)
        path="`mkm path target $1`"
        if [ "$1" = "--global" -o "$1" = "--system" ] ; then
            flag="$1"
            shift 1
            echo "$*" >> "$path" \
            && mklog normal "add ${flag:2} target succ" || mklog error "add ${flag:2} target fail"
            exit
        fi
        echo "$*" >> "$path" \
        && mklog normal "add project target succ" || mklog error "add project target fail"
        exit
        ;;
    path)
        [ "$1" = "--global" ] && echo "$mkxrc_targets_glo" && exit
        [ "$1" = "--system" ] && echo "$mkxrc_targets_sys" && exit
        if [ -f "$mkxrc_targets_prj" ] ; then
            echo "$mkxrc_targets_prj"
            exit
        fi
        mkxrc_targets_prj="`dirname $(dirname "$mkxrc_targets_prj")`/`basename "$mkxrc_targets_prj"`"
        while [ "`dirname "$mkxrc_targets_prj"`" != "/" ] ; do
            if [ -f "$mkxrc_targets_prj" ] ; then
                echo "$mkxrc_targets_prj"
                exit
            fi
            mkxrc_targets_prj="`dirname $(dirname "$mkxrc_targets_prj")`/`basename "$mkxrc_targets_prj"`"
        done
        mkxrc_targets_prj="`pwd -P`/`basename $mkxrc_targets_prj`"
        echo "$mkxrc_targets_prj"
        exit
        ;;
    esac
fi

if [ $mod = "module" ] ; then
    case "$cmd" in
    add)
        if [ $# -lt 6 ] ; then
            showhelp && exit 1;
        fi
        echo "$*" >> $mkxrc_modules
        if [ $? -eq 0 ] ; then
            mklog normal "add module succ"
        else
            mklog error "add module fail"
        fi
        ;;
    list)
        if [ -s $mkxrc_modules ] ; then
            cat $mkxrc_modules
        else
            mklog error "$mkxrc_modules not found"
        fi
        ;;
    del)
        if [ -s $mkxrc_modules ] ; then
            for module in $* ; do
                sed -i "/^$module[ \t]/d" $mkxrc_modules
                mklog normal "del module($module) succ"
            done
        else
            mklog error "$mkxrc_modules not found"
        fi
        ;;
    esac 
fi
