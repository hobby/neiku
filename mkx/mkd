#!/bin/bash
# vim:ts=4:sw=4:expandtab

############################################################
# NAME
#     mkd - a toy for make and deploy targets.
#
# SYNOPSIS
#     mkd
#     mkd [ -f makefile ] [ -C directory ] [ targets ] ...
# 
#     debug=on mkd ...
#
# AUTHORS
#     neiku project <ku7d@qq.com> 
#
# SEE ALSO
#     mkxrc_targets
#     mkxrc_modules
#
# VERSION
#     2015/11/21: 支持命令行或者makefile中OUTPUT定义的target
#                 支持-f选项指定自定义makefile
#                 支持-C选项指定自定义make目录
#     2015/11/22: 支持绝对/相对目录递归mkd
#
############################################################

# target(*) <-----> module(1) <-----> deploy destination(1)
mkxrc_targets=~/.mkxrc_targets
mkxrc_modules=~/.mkxrc_modules

# get make directory
makedir="`make $* -n -p 2>/dev/null | grep '^CURDIR :=' | tail -n1 | cut -c11-`"
if [ -z "$makedir" ]
then
    mklog error "make directory not found, make args:[$*]"
    exit 1
fi
mklog debug "makedir=$makedir"

# maybe mkd for sub directorys
submakedirs="`make $* -n -p 2>/dev/null | grep '^DIRS =' | tail -n1 | cut -c8-`"
mklog debug "submakedirs=$submakedirs"
if [ -n "$submakedirs" ]
then
    for subdir in $submakedirs
    do
        if [ "${subdir:0:1}" = "/" ]
        then
            mkd -C $subdir
        else
            mkd -C $makedir/$subdir
        fi
    done
    mklog debug "mkd for directorys end"
    exit 0
fi

# get targets from cmdline
targets="`make $* -n -p 2>/dev/null | grep '^MAKECMDGOALS :=' | cut -c17-`"
if [ -z "$targets" ]
then
    # default targets from OUTPUT var in makefile
    targets="`make $* -n -p 2>/dev/null | grep '^OUTPUT =' | cut -c10-`"
fi
if [ -z "$targets" ]
then
    mklog error "targets not found, make args:[$*]"
    exit 1
fi
mklog debug "targets=$targets"

# make targets
make $* $targets
if [ $? -ne 0 ]
then
    mklog error "make fail, make args:[$* $targets]"
    exit 1
fi

# deploy targets
for target in $targets
do
    # .so target is specail
    if expr match "$target" ".*\.so$" >/dev/null 2>&1 ; then
        if ! expr match "$target" "^lib" >/dev/null 2>&1 ; then
            target="lib$target"
        fi
    fi
    # .a target is specail
    if expr match "$target" ".*\.a$" >/dev/null 2>&1 ; then
        if ! expr match "$target" "^lib" >/dev/null 2>&1 ; then
            target="lib$target"
        fi
    fi

    # find target's module
    module=`grep -v -E "^#|^$" $mkxrc_targets 2>/dev/null \
            | grep -w "$target" \
            | tail -n1 \
            | awk '{print $1}'`
    if [ -z "$module" ]
    then
        mklog error "module not found, target:[$target]"
        exit 1
    fi 

    # load module's info
    eval `grep -v -E "^#|^$" $mkxrc_modules 2>/dev/null \
          | grep -w "^$module" 2>/dev/null \
          | tail -n1 \
          | awk '{printf "username=%s; rsapkey=%s; hostname=%s; hostport=%s; hostpath=%s" \
                        ,         $2,         $3,          $4,          $5,          $6}'`
    mklog debug "target:[$target], module:[$module]," \
                "username:[$username], rsa-private:[$rsapkey]," \
                "hostname:[$hostname], hostport:[$hostport]," \
                "hostpath:[$hostpath], makedir:[$makedir]"
    if [   -z "$username" -o -z "$rsapkey" \
        -o -z "$hostname" -o -z "$hostport" -o -z "$hostpath" ]
    then
        mklog error "module not found, target:[$target], module:[$module]"
        exit 1
    fi

    # do deploy
    mkt $target
    scp -C -i $rsapkey -P $hostport "$makedir/$target" $username@$hostname:$hostpath
    mkr $target
done
