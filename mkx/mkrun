#!/bin/bash
# vim:ts=4:sw=4:expandtab

##################################################################
# NAME
#     mkrun - a toy for run target's command
#
# SYNOPSIS
#     mkrun
#     mkrun start|stop|restart|pre-deploy|post-deploy targets ... 
# 
#     debug=on mkrun ...
#
# AUTHORS
#     neiku project <ku7d@qq.com> 
#
# SEE ALSO
#     mkxrc_commands
#     mkxrc_targets
#     mkxrc_modules
#
# VERSION
#     2015/11/21: 支持每个target指定类型的命令(start/stop/restart)
#     2015/11/25: 支持可配置登录方式(目前只支持rsa)
#                 支持pre-deploy/post-deploy类型命令
#                 支持命令别名(alias)
#
##################################################################

# target(*) <-----> module(1)     <-----> destination(1)
# target(1) <-----> command(stop)
mkxrc_commands=~/.mkxrc_commands
mkxrc_targets=~/.mkxrc_targets
mkxrc_modules=~/.mkxrc_modules

if [ $# -lt 2 ] ; then
    mklog error "usage: $0 start|stop|restart|pre-deploy|post-deploy targets ..."
    exit 1
fi

type="$1"
if [   "$type" != "start"       \
    -a "$type" != "stop"        \
    -a "$type" != "restart"     \
    -a "$type" != "pre-deploy"  \
    -a "$type" != "post-deploy" ]
then
    mklog error "unknow command type, type:[$type]," \
                "supported type:[start, stop, restart, pre-deploy, post-deploy]"
    exit 1
fi
shift 1

# run target's command with type
for target in $*
do
    # find target's command
    command=
    eval `grep -v -E "^#|^$" $mkxrc_commands 2>/dev/null \
          | grep -P "^$target[ \t]*$type" \
          | tail -n1 \
          | while read target type command
            do
                echo "command='$command';"
            done` >/dev/null 2>&1
    if [ $? -ne 0 ] ; then
        mklog error "load $type command fail, target:[$target]"
        continue
    fi 
    if [ -n "$debug" ] ; then
        mklog debug "target:[$target], type:[$type], command:[$command]"
    fi
    if [   -z "$type" -o -z "$command" ] ; then
        mklog error "$type command not found, target:[$target]"
        continue
    fi

    # maybe command alias
    if [ "${command:0:1}" = "@" ] ; then
        mklog debug "$target's $type command is alias ${command:1}"
        mkrun "${command:1}" $target
        continue
    fi

    # find target's module
    module=`grep -v -E "^#|^$" $mkxrc_targets 2>/dev/null \
            | grep -w "$target" \
            | tail -n1 \
            | awk '{print $1}'`
    if [ -z "$module" ] ; then
        mklog error "module not found, target:[$target]"
        exit 1
    fi 

    # load module's info
    eval `grep -v -E "^#|^$" $mkxrc_modules 2>/dev/null \
          | grep -w "^$module" 2>/dev/null \
          | tail -n1 \
          | awk '{printf "mtype=%s; username=%s; rsapkey=%s; hostname=%s; hostport=%s;" \
                         ,      $2,          $3,         $4,          $5,          $6}'`
    if [ -n "$debug" ] ; then
        mklog debug "target:[$target], module:[$module], mtype:[$mtype]," \
                    "username:[$username], rsa-private:[$rsapkey]," \
                    "hostname:[$hostname], hostport:[$hostport]"
    fi
    if [   -z "$mtype" -o -z "$username" -o -z "$rsapkey" \
        -o -z "$hostname" -o -z "$hostport" ]
    then
        mklog error "module not found, target:[$target], module:[$module]"
        continue
    fi

    # run command
    mklog normal "run $type command for '$target' with command:[$command]"
    if [ "$mtype" = "rsa" ] ; then
        ssh -i $rsapkey -p $hostport $username@$hostname "$command"
    fi
done
