#!/bin/bash
# vim:ts=4:sw=4:expandtab

##################################################################
# NAME
#     mkrun - a toy for run target's command
#
# SYNOPSIS
#     mkrun
#     mkrun start|stop|restart|pre-deploy|post-deploy targets ... 
# 
#     debug=on mkrun ...
#
# AUTHORS
#     neiku project <ku7d@qq.com> 
#
# SEE ALSO
#     mkxrc_commands
#     mkxrc_targets
#     mkxrc_modules
#
# VERSION
#     2015/11/21: 支持每个target指定类型的命令(start/stop/restart)
#     2015/11/25: 支持可配置登录方式(目前只支持rsa)
#                 支持pre-deploy/post-deploy类型命令
#                 支持命令别名(alias)
#     2015/11/28: 支持使用mkm查找target(project/global/system级别)
#                 支持使用mkm查找module(project/global/system级别)
#                 支持使用mkm查找command(project/global/system级别)
#     2015/12/03: 支持本地部署模块(local module)
#
##################################################################

# target(*) <-----> module(1)     <-----> destination(1)
# target(1) <-----> command(stop)

if [ $# -lt 2 ] ; then
    mklog error "usage: $0 start|stop|restart|pre-deploy|post-deploy targets ..."
    exit 1
fi

type="$1"
if [   "$type" != "start"       \
    -a "$type" != "stop"        \
    -a "$type" != "restart"     \
    -a "$type" != "pre-deploy"  \
    -a "$type" != "post-deploy" ]
then
    mklog error "unknow command type, type:[$type]," \
                "supported type:[start, stop, restart, pre-deploy, post-deploy]"
    exit 1
fi
shift 1

# run target's command with type
for target in $*
do
    # .so target is specail
    if expr match "$target" ".*\.so$" >/dev/null 2>&1 ; then
        if ! expr match "$target" "^lib" >/dev/null 2>&1 ; then
            target="lib$target"
        fi
    fi
    # .a target is specail
    if expr match "$target" ".*\.a$" >/dev/null 2>&1 ; then
        if ! expr match "$target" "^lib" >/dev/null 2>&1 ; then
            target="lib$target"
        fi
    fi

    # find target's command
    command=
    eval `mkm find command $target $type | while read target type command
          do
              echo "command='$command';"
          done` >/dev/null 2>&1
    if [ $? -ne 0 ] ; then
        mklog error "load $type command fail, target:[$target]"
        continue
    fi 
    if [ -n "$debug" ] ; then
        mklog debug "target:[$target], type:[$type], command:[$command]"
    fi
    if [   -z "$type" -o -z "$command" ] ; then
        mklog error "$type command not found, target:[$target]"
        continue
    fi

    # maybe command alias
    if [ "${command:0:1}" = "@" ] ; then
        mklog debug "$target's $type command is alias ${command:1}"
        mkrun "${command:1}" $target
        continue
    fi

    # find target's module
    module=`mkm find target $target | awk '{print $1}'`
    if [ -z "$module" ] ; then
        mklog error "module not found, target:[$target]"
        continue
    fi 

    # load module's info
    mtype=""; username=""; rsapkey=""; hostname=""; hostport="";
    eval `mkm find module $module \
          | awk '{printf "mtype=%s; username=%s; rsapkey=%s; hostname=%s; hostport=%s;" \
                         ,      $2,          $3,         $4,          $5,          $6}'`
    if [ -n "$debug" ] ; then
        mklog debug "target:[$target], module:[$module], mtype:[$mtype]," \
                    "username:[$username], rsa-private:[$rsapkey]," \
                    "hostname:[$hostname], hostport:[$hostport]"
    fi
    if [ "$mtype" != "rsa" -a "$mtype" != "local" ] ; then
        mklog error "module type unsupported, type:[$mtype]," \
                    "supported type:[rsa, local]"
        exit 1
    fi

    # run command
    mklog normal "run $type command for '$target' with command:[$command]"
    case "$mtype" in
        rsa)
            if [   -z "$mtype" -o -z "$username" -o -z "$rsapkey" \
                -o -z "$hostname" -o -z "$hostport" ]
            then
                mklog error "rsa module not ok, target:[$target], module:[$module]"
                continue
            fi
            ssh -i $rsapkey -p $hostport $username@$hostname "$command"
            ;;
        local)
            eval "$command"
            ;;
        *)
            mklog error "module type unsupported, type:[$mtype]," \
                        "supported type:[rsa, local]"
            exit 1
            ;;
    esac
done
